---
format: gfm
---

<!-- README.md is generated from README.qmd. Please edit that file -->

```{r}
#| include: false
# Create pdf and png version of template
library(tidyverse)
library(quarto)
library(magick)

# Render template
fs::dir_copy("_extensions/joas", "_extensions/espinielli/joas", overwrite = TRUE)
quarto_render(input = "template.qmd", output_format = "joas-pdf")
fs::dir_delete("_extensions/espinielli")
# Convert rendered PDF to PNG
image_read_pdf("template.pdf", pages = c(1, 2, 3, 4)) |>
  image_montage(geometry = "x500+25+35", tile = "2x2", bg = "grey92", shadow = TRUE) |>
  image_convert(format = "png") |>
  image_write("examples/template.png")
# Move pdf to examples folder
fs::file_move("template.pdf", "examples/template.pdf")
```

# JOAS

This Quarto format will help you create articles for the Journal of Open Aviation Science (JOAS).

## Creating a new article

You can use this as a template to create an article from scratch.
To do this, use the following command:

```bash
# eventually to be moved to quarto-journals
quarto use template espinielli/quarto-joas
```

This will install the extension and create an example qmd file that you can use as a starting place for your article.

If you just want to install the extension, execute:

```bash
quarto add espinielli/quarto-joas
```

**NOTE**: please soon after the creation of your article remember to render the qmd twice for the first time.
This will copy the needed files.

## Installation for existing document

You may also use this format with an existing Quarto project or document.
From the quarto project or document directory, run the following command to install this format:

```bash
# eventually to be moved to quarto-journals
quarto install extension espinielli/quarto-joas
```

## Example

[![](examples/template.png)](examples/template.pdf)


# Options

## Document class {#sec-doc-class}

* `manuscript=`
  - `manuscript=article` (default)
  - `manuscript=rescience`
  - `manuscript=data`
  - `manuscript=software`
  - `manuscript=proceedings`
  - `manuscript=poster`

* `layout=`
  - `preprint` for submission
  - `publish` for publisher only. This prepared the paper for publication
     with all the _blees & whistles_ required. See also @sec-publisher-options 
     and @fig-metadata.
  
* `volume=` used by publisher, see @fig-metadata.
* `year=` used by publisher, see @fig-metadata.

For example the following YML snippet (and the ones in @sec-publisher-options)

```yml
format:
  joas-pdf:
    classoption:
      - "manuscript=proceedings"
      - "layout=publish"
      - "volume=x"
      - "year=20xx"
```
will render metadata as per @fig-metadata.
The published paper will as well mention the open license JOAS promotes, see
@fig-license.

::: {#fig-published layout-ncol=1}

![publishing touches](examples/final-metadata-joas.png){#fig-metadata}

![License at the bottom of the title page.](examples/license-joas.png){#fig-license}

Final touches for publication.
:::





## Publisher options {#sec-publisher-options}

* `layout=publish`, see @sec-doc-class
* `joas-doi`: the DOI of the paper
* `joas-editor`: the name of the editor
* `joas-reviewer`: the list of reviewers
* `joas-dates`: the review dates

The following settings will render as per @fig-published.

```yml
joas-doi: "xx.xxxxx/joas.x.xxxx"
joas-editor: Editor Name
joas-reviewer:
  - First Reviewer
  - Second Reviewer
  - Third Reviewer
joas-dates:
  received: "1 April 2024"
  revised: "1 May 2024"
  accepted: "10 May 2024"
  published: "20 May 2024"
```

## Other options

```yml
joas-abbreviations:
  - "JOAS: Journal of Open Aviation Science"
  - "ATM: Air Traffic Managment"

```

# Deficiencies

1. On macOS I do not get the same font as per orignal JOAS.
   I think it is due to some other packages or options selected there.
1. The plain `joas.cls` needs to be edited: the line
   > \RequirePackage[italic,eulergreek,defaultmathsizes]{mathastext}
   does not work, `eulergreek` needs to be removed.


# How to upgrade to a new `joas.cls`

Other than what mentioned above about `eulergreek`,
I changed the original class to read 

```tex
\ProvidesClass{joas}
```
instead of 

```tex
\ProvidesClass{extra/joas}
```
